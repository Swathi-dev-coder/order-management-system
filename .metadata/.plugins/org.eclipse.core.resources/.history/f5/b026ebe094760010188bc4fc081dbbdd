package com.oms.userservice;

import io.jsonwebtoken.*;
import io.jsonwebtoken.security.Keys;
import org.springframework.stereotype.Component;

import java.security.Key;
import java.util.Date;

@Component

public class JwtUtil {

 private final String SECRET = "mysecretkeymysecretkeymysecretkey"; // at least 256 bit

 private final Key key = Keys.hmacShaKeyFor(SECRET.getBytes());

 private final long expiration = 1000 * 60 * 60; // 1 hour

 public String generateToken(String username) {
     return Jwts.builder()
             .setSubject(username)
             .setIssuer("auth-service")
             .setIssuedAt(new Date())
             .setExpiration(new Date(System.currentTimeMillis() + expiration))
             .signWith(key)
             .compact();
 }

 public boolean validateToken(String token) {
     try {
         Jwts.parserBuilder().setSigningKey(key).build().parseClaimsJws(token);
         return true;
     } catch (JwtException ex) {
         return false;
     }
 }

 public String getUsernameFromToken(String token) {
     Claims claims = Jwts.parserBuilder()
             .setSigningKey(key)
             .build()
             .parseClaimsJws(token)
             .getBody();
     return claims.getSubject();
 }
}

