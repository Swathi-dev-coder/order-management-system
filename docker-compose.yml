# version: '3.8'
# services:
#   rabbitmq:
#     image: rabbitmq:3-management
#     container_name: rabbitmq
#     ports:
#       - "5672:5672"
#       - "15672:15672"
    


#   user-service:
#     build: ./userservice/userservice
#     container_name: user-service
#     ports:
#       - "8082:8082"
#     depends_on:
#       rabbitmq:
#         condition: service_healthy

#   order-service:
#     build: ./order-service/order-service
#     container_name: order-service
#     ports:
#       - "8081:8081"
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
      

#   notification-service:
#     build: ./notification-service/notification-service
#     container_name: notification-service
#     ports:
#       - "8083:8083"
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
      

services:
  mysql-db:
    image: mysql:8
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-pmysql"]
      interval: 10s
      timeout: 5s
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    
  user-service:
    image: swathich1/user-service:latest
    build:
      context: ./userservice/userservice
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8082:8082"
    depends_on:
      mysql-db:
        condition: service_healthy

    networks:
      - my-network
   

  order-service:
    image: swathich1/order-service:latest
    build: 
      context: ./order-service/order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8081:8081"
    depends_on:
      mysql-db:
        condition: service_healthy
  
    networks:
      - my-network
    

  notification-service:
    image: swathich1/notification-service:latest
    build: 
      context: ./notification-service/notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8083:8083"

    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  mysql-data:
  rabbitmq-data:
